name: Lint, Package, Publish

on: [push, pull_request]

jobs:
  build:
    name: Lint and Package
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'

    - name: Install CI Dependencies
      run: |
        pip install pip-tools==7.*
        pip-compile --extra dev -o - pyproject.toml | pip install -r /dev/stdin -U

    - name: Lint
      run: |
        black --check .
        ruff check .

    - name: Package
      run: |
        python -m build
        twine check dist/*

    - name: Upload Package Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Package Artifacts
        path: dist/
        if-no-files-found: error

  test:
    name: Test Packages
    needs: [build]
    runs-on: ubuntu-latest
    strategy:
          matrix:
            python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Download the distribution artifacts.
      uses: actions/download-artifact@v4
      with:
        name: Package Artifacts

    - name: 
      run: |
        pip install *.whl
        control-delcom904x --help

  publish-to-testpypi:
    name: Publish to TestPyPi
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/test-v')
    needs: [build, test]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://test.pypi.org/p/pydbisam
    permissions:
      id-token: write

    steps:
    - name: Download the distribution artifacts.
      uses: actions/download-artifact@v4
      with:
        name: Package Artifacts
        path: dist/

    - name: Publish packages to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/

  publish-to-pypi:
    name: Publish to PyPi
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs: [build, test]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/pydbisam
    permissions:
      id-token: write

    steps:
    - name: Download the distribution artifacts.
      uses: actions/download-artifact@v4
      with:
        name: Package Artifacts
        path: dist/

    - name: Publish packages to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
